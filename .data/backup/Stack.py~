class Stack:
    def __init__(self):
        self.items = []

    def isEmpty(self):
        return self.items == []

    def push(self, item):
        self.items.append(item)

    def pop(self):
        return self.items.pop()

    def peek(self):
        return self.items[len(self.items) - 1]

    def size(self):
        return len(self.items)


def divBy2(num):
    remainder = Stack()

    while num > 0:
        rem = num % 2
        remainder.push(rem)
        num = num // 2

    binstr = ""
    while not remainder.isEmpty():
        binstr += str(remainder.pop())

    return binstr


def digitConverter(num, base):
    rem = Stack()
    digits = "0123456789ABCDEFGH"
    while num > 0:
        remainder = num % base
        rem.push(remainder)
        num = num // base

    xstr = ""
    while not rem.isEmpty():
        xstr += digits[rem.pop()]

    return xstr


print(digitConverter(191, 2))
print(digitConverter(351, 8))
